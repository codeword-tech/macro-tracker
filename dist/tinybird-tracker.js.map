{"version":3,"file":"tinybird-tracker.js","sources":["../src/constants.ts","../src/timezones.ts","../src/sessionId.ts","../src/trackEvent.ts","../src/sendEvent.ts","../src/uuidv4.ts","../src/maskSuspiciousAttributes.ts","../src/defaultPayload.ts","../src/trackPageHit.ts","../src/index.ts"],"sourcesContent":["export const COOKIE_NAME = 'session-id'\nexport let DATASOURCE = 'analytics_events'\nexport let globalAttributes = {}\n\nexport let proxy: string, token: string, host: string, domain: string\n\nif (document.currentScript) {\n  host = document.currentScript.getAttribute('data-host')\n  proxy = document.currentScript.getAttribute('data-proxy')\n  token = document.currentScript.getAttribute('data-token')\n  domain = document.currentScript.getAttribute('data-domain')\n  DATASOURCE = document.currentScript.getAttribute('data-datasource') || DATASOURCE\n\n  for (const attr of Array.from(document.currentScript.attributes)) {\n    if (attr.name.startsWith('tb_')) {\n      globalAttributes[attr.name.slice(3)] = attr.value\n    }\n  }\n}\n","export const timezones = {\n  'Asia/Barnaul': 'RU',\n  'Africa/Nouakchott': 'MR',\n  'Africa/Lusaka': 'ZM',\n  'Asia/Pyongyang': 'KP',\n  'Europe/Bratislava': 'SK',\n  'America/Belize': 'BZ',\n  'America/Maceio': 'BR',\n  'Pacific/Chuuk': 'FM',\n  'Indian/Comoro': 'KM',\n  'Pacific/Palau': 'PW',\n  'Asia/Jakarta': 'ID',\n  'Africa/Windhoek': 'NA',\n  'America/Chihuahua': 'MX',\n  'America/Nome': 'US',\n  'Africa/Mbabane': 'SZ',\n  'Africa/Porto-Novo': 'BJ',\n  'Europe/San_Marino': 'SM',\n  'Pacific/Fakaofo': 'TK',\n  'America/Denver': 'US',\n  'Europe/Belgrade': 'RS',\n  'America/Indiana/Tell_City': 'US',\n  'America/Fortaleza': 'BR',\n  'America/Halifax': 'CA',\n  'Europe/Bucharest': 'RO',\n  'America/Indiana/Petersburg': 'US',\n  'Europe/Kirov': 'RU',\n  'Europe/Athens': 'GR',\n  'America/Argentina/Ushuaia': 'AR',\n  'Europe/Monaco': 'MC',\n  'Europe/Vilnius': 'LT',\n  'Europe/Copenhagen': 'DK',\n  'Pacific/Kanton': 'KI',\n  'America/Caracas': 'VE',\n  'Asia/Almaty': 'KZ',\n  'Europe/Paris': 'FR',\n  'Africa/Blantyre': 'MW',\n  'Asia/Muscat': 'OM',\n  'America/North_Dakota/Beulah': 'US',\n  'America/Matamoros': 'MX',\n  'Asia/Irkutsk': 'RU',\n  'America/Costa_Rica': 'CR',\n  'America/Araguaina': 'BR',\n  'Atlantic/Canary': 'ES',\n  'America/Santo_Domingo': 'DO',\n  'America/Vancouver': 'CA',\n  'Africa/Addis_Ababa': 'ET',\n  'Africa/Accra': 'GH',\n  'Pacific/Kwajalein': 'MH',\n  'Asia/Baghdad': 'IQ',\n  'Australia/Adelaide': 'AU',\n  'Australia/Hobart': 'AU',\n  'America/Guayaquil': 'EC',\n  'America/Argentina/Tucuman': 'AR',\n  'Australia/Lindeman': 'AU',\n  'America/New_York': 'US',\n  'Pacific/Fiji': 'FJ',\n  'America/Antigua': 'AG',\n  'Africa/Casablanca': 'MA',\n  'America/Paramaribo': 'SR',\n  'Africa/Cairo': 'EG',\n  'America/Cayenne': 'GF',\n  'America/Detroit': 'US',\n  'Antarctica/Syowa': 'AQ',\n  'Africa/Douala': 'CM',\n  'America/Argentina/La_Rioja': 'AR',\n  'Africa/Lagos': 'NG',\n  'America/St_Barthelemy': 'BL',\n  'Asia/Nicosia': 'CY',\n  'Asia/Macau': 'MO',\n  'Europe/Riga': 'LV',\n  'Asia/Ashgabat': 'TM',\n  'Indian/Antananarivo': 'MG',\n  'America/Argentina/San_Juan': 'AR',\n  'Asia/Aden': 'YE',\n  'Asia/Tomsk': 'RU',\n  'America/Asuncion': 'PY',\n  'Pacific/Bougainville': 'PG',\n  'Asia/Vientiane': 'LA',\n  'America/Mazatlan': 'MX',\n  'Africa/Luanda': 'AO',\n  'Europe/Oslo': 'NO',\n  'Africa/Kinshasa': 'CD',\n  'Europe/Warsaw': 'PL',\n  'America/Grand_Turk': 'TC',\n  'Asia/Seoul': 'KR',\n  'Africa/Tripoli': 'LY',\n  'America/St_Thomas': 'VI',\n  'Asia/Kathmandu': 'NP',\n  'Pacific/Pitcairn': 'PN',\n  'Pacific/Nauru': 'NR',\n  'America/Curacao': 'CW',\n  'Asia/Kabul': 'AF',\n  'Pacific/Tongatapu': 'TO',\n  'Europe/Simferopol': 'UA',\n  'Asia/Ust-Nera': 'RU',\n  'Africa/Mogadishu': 'SO',\n  'Indian/Mayotte': 'YT',\n  'Pacific/Niue': 'NU',\n  'America/Thunder_Bay': 'CA',\n  'Atlantic/Azores': 'PT',\n  'Pacific/Gambier': 'PF',\n  'Europe/Stockholm': 'SE',\n  'Africa/Libreville': 'GA',\n  'America/Punta_Arenas': 'CL',\n  'America/Guatemala': 'GT',\n  'America/Noronha': 'BR',\n  'Europe/Helsinki': 'FI',\n  'Asia/Gaza': 'PS',\n  'Pacific/Kosrae': 'FM',\n  'America/Aruba': 'AW',\n  'America/Nassau': 'BS',\n  'Asia/Choibalsan': 'MN',\n  'America/Winnipeg': 'CA',\n  'America/Anguilla': 'AI',\n  'Asia/Thimphu': 'BT',\n  'Asia/Beirut': 'LB',\n  'Atlantic/Faroe': 'FO',\n  'Europe/Berlin': 'DE',\n  'Europe/Amsterdam': 'NL',\n  'Pacific/Honolulu': 'US',\n  'America/Regina': 'CA',\n  'America/Scoresbysund': 'GL',\n  'Europe/Vienna': 'AT',\n  'Europe/Tirane': 'AL',\n  'Africa/El_Aaiun': 'EH',\n  'America/Creston': 'CA',\n  'Asia/Qostanay': 'KZ',\n  'Asia/Ho_Chi_Minh': 'VN',\n  'Europe/Samara': 'RU',\n  'Europe/Rome': 'IT',\n  'Australia/Eucla': 'AU',\n  'America/El_Salvador': 'SV',\n  'America/Chicago': 'US',\n  'Africa/Abidjan': 'CI',\n  'Asia/Kamchatka': 'RU',\n  'Pacific/Tarawa': 'KI',\n  'America/Santiago': 'CL',\n  'America/Bahia': 'BR',\n  'Indian/Christmas': 'CX',\n  'Asia/Atyrau': 'KZ',\n  'Asia/Dushanbe': 'TJ',\n  'Europe/Ulyanovsk': 'RU',\n  'America/Yellowknife': 'CA',\n  'America/Recife': 'BR',\n  'Australia/Sydney': 'AU',\n  'America/Fort_Nelson': 'CA',\n  'Pacific/Efate': 'VU',\n  'Europe/Saratov': 'RU',\n  'Africa/Banjul': 'GM',\n  'Asia/Omsk': 'RU',\n  'Europe/Ljubljana': 'SI',\n  'Europe/Budapest': 'HU',\n  'Europe/Astrakhan': 'RU',\n  'America/Argentina/Buenos_Aires': 'AR',\n  'Pacific/Chatham': 'NZ',\n  'America/Argentina/Salta': 'AR',\n  'Africa/Niamey': 'NE',\n  'Asia/Pontianak': 'ID',\n  'Indian/Reunion': 'RE',\n  'Asia/Hong_Kong': 'HK',\n  'Antarctica/McMurdo': 'AQ',\n  'Africa/Malabo': 'GQ',\n  'America/Los_Angeles': 'US',\n  'America/Argentina/Cordoba': 'AR',\n  'Pacific/Pohnpei': 'FM',\n  'America/Tijuana': 'MX',\n  'America/Campo_Grande': 'BR',\n  'America/Dawson_Creek': 'CA',\n  'Asia/Novosibirsk': 'RU',\n  'Pacific/Pago_Pago': 'AS',\n  'Asia/Jerusalem': 'IL',\n  'Europe/Sarajevo': 'BA',\n  'Africa/Freetown': 'SL',\n  'Asia/Yekaterinburg': 'RU',\n  'America/Juneau': 'US',\n  'Africa/Ouagadougou': 'BF',\n  'Africa/Monrovia': 'LR',\n  'Europe/Kiev': 'UA',\n  'America/Argentina/San_Luis': 'AR',\n  'Asia/Tokyo': 'JP',\n  'Asia/Qatar': 'QA',\n  'America/La_Paz': 'BO',\n  'America/Bogota': 'CO',\n  'America/Thule': 'GL',\n  'Asia/Manila': 'PH',\n  'Asia/Hovd': 'MN',\n  'Asia/Tehran': 'IR',\n  'Atlantic/Madeira': 'PT',\n  'America/Metlakatla': 'US',\n  'Europe/Vatican': 'VA',\n  'Asia/Bishkek': 'KG',\n  'Asia/Dili': 'TL',\n  'Antarctica/Palmer': 'AQ',\n  'Atlantic/Cape_Verde': 'CV',\n  'Indian/Chagos': 'IO',\n  'America/Kentucky/Monticello': 'US',\n  'Africa/Algiers': 'DZ',\n  'Africa/Maseru': 'LS',\n  'Asia/Kuala_Lumpur': 'MY',\n  'Africa/Khartoum': 'SD',\n  'America/Argentina/Rio_Gallegos': 'AR',\n  'America/Blanc-Sablon': 'CA',\n  'Africa/Maputo': 'MZ',\n  'America/Tortola': 'VG',\n  'Atlantic/Bermuda': 'BM',\n  'America/Argentina/Catamarca': 'AR',\n  'America/Cayman': 'KY',\n  'America/Puerto_Rico': 'PR',\n  'Pacific/Majuro': 'MH',\n  'Europe/Busingen': 'DE',\n  'Pacific/Midway': 'UM',\n  'Indian/Cocos': 'CC',\n  'Asia/Singapore': 'SG',\n  'America/Boise': 'US',\n  'America/Nuuk': 'GL',\n  'America/Goose_Bay': 'CA',\n  'Australia/Broken_Hill': 'AU',\n  'Africa/Dar_es_Salaam': 'TZ',\n  'Africa/Asmara': 'ER',\n  'Asia/Samarkand': 'UZ',\n  'Asia/Tbilisi': 'GE',\n  'America/Argentina/Jujuy': 'AR',\n  'America/Indiana/Winamac': 'US',\n  'America/Porto_Velho': 'BR',\n  'Asia/Magadan': 'RU',\n  'Europe/Zaporozhye': 'UA',\n  'Antarctica/Casey': 'AQ',\n  'Asia/Shanghai': 'CN',\n  'Pacific/Norfolk': 'NF',\n  'Europe/Guernsey': 'GG',\n  'Australia/Brisbane': 'AU',\n  'Antarctica/DumontDUrville': 'AQ',\n  'America/Havana': 'CU',\n  'America/Atikokan': 'CA',\n  'America/Mexico_City': 'MX',\n  'America/Rankin_Inlet': 'CA',\n  'America/Cuiaba': 'BR',\n  'America/Resolute': 'CA',\n  'Africa/Ceuta': 'ES',\n  'Arctic/Longyearbyen': 'SJ',\n  'Pacific/Guam': 'GU',\n  'Asia/Damascus': 'SY',\n  'Asia/Colombo': 'LK',\n  'Asia/Yerevan': 'AM',\n  'America/Montserrat': 'MS',\n  'America/Belem': 'BR',\n  'Europe/Kaliningrad': 'RU',\n  'Atlantic/South_Georgia': 'GS',\n  'Asia/Tashkent': 'UZ',\n  'Asia/Kolkata': 'IN',\n  'America/St_Johns': 'CA',\n  'Asia/Srednekolymsk': 'RU',\n  'Asia/Yakutsk': 'RU',\n  'Europe/Prague': 'CZ',\n  'Africa/Djibouti': 'DJ',\n  'Asia/Dubai': 'AE',\n  'Europe/Uzhgorod': 'UA',\n  'America/Edmonton': 'CA',\n  'Asia/Famagusta': 'CY',\n  'America/Indiana/Knox': 'US',\n  'Asia/Hebron': 'PS',\n  'Asia/Taipei': 'TW',\n  'Europe/London': 'GB',\n  'Africa/Dakar': 'SN',\n  'Australia/Darwin': 'AU',\n  'America/Glace_Bay': 'CA',\n  'Antarctica/Vostok': 'AQ',\n  'America/Indiana/Vincennes': 'US',\n  'America/Nipigon': 'CA',\n  'Asia/Kuwait': 'KW',\n  'Pacific/Guadalcanal': 'SB',\n  'America/Toronto': 'CA',\n  'Africa/Gaborone': 'BW',\n  'Africa/Bujumbura': 'BI',\n  'Africa/Lubumbashi': 'CD',\n  'America/Merida': 'MX',\n  'America/Marigot': 'MF',\n  'Europe/Zagreb': 'HR',\n  'Pacific/Easter': 'CL',\n  'America/Santarem': 'BR',\n  'Pacific/Noumea': 'NC',\n  'America/Sitka': 'US',\n  'Atlantic/Stanley': 'FK',\n  'Pacific/Funafuti': 'TV',\n  'America/Iqaluit': 'CA',\n  'America/Rainy_River': 'CA',\n  'America/Anchorage': 'US',\n  'America/Lima': 'PE',\n  'Asia/Baku': 'AZ',\n  'America/Indiana/Vevay': 'US',\n  'Asia/Ulaanbaatar': 'MN',\n  'America/Managua': 'NI',\n  'Asia/Krasnoyarsk': 'RU',\n  'Asia/Qyzylorda': 'KZ',\n  'America/Eirunepe': 'BR',\n  'Europe/Podgorica': 'ME',\n  'Europe/Chisinau': 'MD',\n  'Europe/Mariehamn': 'AX',\n  'Europe/Volgograd': 'RU',\n  'Africa/Nairobi': 'KE',\n  'Europe/Isle_of_Man': 'IM',\n  'America/Menominee': 'US',\n  'Africa/Harare': 'ZW',\n  'Asia/Anadyr': 'RU',\n  'America/Moncton': 'CA',\n  'Indian/Maldives': 'MV',\n  'America/Whitehorse': 'CA',\n  'Antarctica/Mawson': 'AQ',\n  'Europe/Madrid': 'ES',\n  'America/Argentina/Mendoza': 'AR',\n  'America/Manaus': 'BR',\n  'Africa/Bangui': 'CF',\n  'Indian/Mauritius': 'MU',\n  'Africa/Tunis': 'TN',\n  'Australia/Lord_Howe': 'AU',\n  'America/Kentucky/Louisville': 'US',\n  'America/North_Dakota/Center': 'US',\n  'Asia/Novokuznetsk': 'RU',\n  'Asia/Makassar': 'ID',\n  'America/Port_of_Spain': 'TT',\n  'America/Bahia_Banderas': 'MX',\n  'Pacific/Auckland': 'NZ',\n  'America/Sao_Paulo': 'BR',\n  'Asia/Dhaka': 'BD',\n  'America/Pangnirtung': 'CA',\n  'Europe/Dublin': 'IE',\n  'Asia/Brunei': 'BN',\n  'Africa/Brazzaville': 'CG',\n  'America/Montevideo': 'UY',\n  'America/Jamaica': 'JM',\n  'America/Indiana/Indianapolis': 'US',\n  'America/Kralendijk': 'BQ',\n  'Europe/Gibraltar': 'GI',\n  'Pacific/Marquesas': 'PF',\n  'Pacific/Apia': 'WS',\n  'Europe/Jersey': 'JE',\n  'America/Phoenix': 'US',\n  'Africa/Ndjamena': 'TD',\n  'Asia/Karachi': 'PK',\n  'Africa/Kampala': 'UG',\n  'Asia/Sakhalin': 'RU',\n  'America/Martinique': 'MQ',\n  'Europe/Moscow': 'RU',\n  'Africa/Conakry': 'GN',\n  'America/Barbados': 'BB',\n  'Africa/Lome': 'TG',\n  'America/Ojinaga': 'MX',\n  'America/Tegucigalpa': 'HN',\n  'Asia/Bangkok': 'TH',\n  'Africa/Johannesburg': 'ZA',\n  'Europe/Vaduz': 'LI',\n  'Africa/Sao_Tome': 'ST',\n  'America/Cambridge_Bay': 'CA',\n  'America/Lower_Princes': 'SX',\n  'America/Miquelon': 'PM',\n  'America/St_Kitts': 'KN',\n  'Australia/Melbourne': 'AU',\n  'Europe/Minsk': 'BY',\n  'Asia/Vladivostok': 'RU',\n  'Europe/Sofia': 'BG',\n  'Antarctica/Davis': 'AQ',\n  'Pacific/Galapagos': 'EC',\n  'America/North_Dakota/New_Salem': 'US',\n  'Asia/Amman': 'JO',\n  'Pacific/Wallis': 'WF',\n  'America/Hermosillo': 'MX',\n  'Pacific/Kiritimati': 'KI',\n  'Antarctica/Macquarie': 'AU',\n  'America/Guyana': 'GY',\n  'Asia/Riyadh': 'SA',\n  'Pacific/Tahiti': 'PF',\n  'America/St_Vincent': 'VC',\n  'America/Cancun': 'MX',\n  'America/Grenada': 'GD',\n  'Pacific/Wake': 'UM',\n  'America/Dawson': 'CA',\n  'Europe/Brussels': 'BE',\n  'Indian/Kerguelen': 'TF',\n  'America/Yakutat': 'US',\n  'Indian/Mahe': 'SC',\n  'Atlantic/Reykjavik': 'IS',\n  'America/Panama': 'PA',\n  'America/Guadeloupe': 'GP',\n  'Europe/Malta': 'MT',\n  'Antarctica/Troll': 'AQ',\n  'Asia/Jayapura': 'ID',\n  'Asia/Bahrain': 'BH',\n  'Asia/Chita': 'RU',\n  'Europe/Tallinn': 'EE',\n  'Asia/Khandyga': 'RU',\n  'America/Rio_Branco': 'BR',\n  'Atlantic/St_Helena': 'SH',\n  'Africa/Juba': 'SS',\n  'America/Adak': 'US',\n  'Pacific/Saipan': 'MP',\n  'America/St_Lucia': 'LC',\n  'America/Inuvik': 'CA',\n  'Europe/Luxembourg': 'LU',\n  'Africa/Bissau': 'GW',\n  'Asia/Oral': 'KZ',\n  'America/Boa_Vista': 'BR',\n  'Europe/Skopje': 'MK',\n  'America/Port-au-Prince': 'HT',\n  'Pacific/Port_Moresby': 'PG',\n  'Europe/Andorra': 'AD',\n  'America/Indiana/Marengo': 'US',\n  'Africa/Kigali': 'RW',\n  'Africa/Bamako': 'ML',\n  'America/Dominica': 'DM',\n  'Asia/Aqtobe': 'KZ',\n  'Europe/Istanbul': 'TR',\n  'Pacific/Rarotonga': 'CK',\n  'America/Danmarkshavn': 'GL',\n  'Europe/Zurich': 'CH',\n  'Asia/Yangon': 'MM',\n  'America/Monterrey': 'MX',\n  'Europe/Lisbon': 'PT',\n  'Asia/Kuching': 'MY',\n  'Antarctica/Rothera': 'AQ',\n  'Australia/Perth': 'AU',\n  'Asia/Phnom_Penh': 'KH',\n  'America/Swift_Current': 'CA',\n  'Asia/Aqtau': 'KZ',\n  'Asia/Urumqi': 'CN'\n}\n","import { COOKIE_NAME, domain } from './constants'\nimport { uuidv4 } from './uuidv4'\n\nexport function getSessionId() {\n  let cookie = {}\n  document.cookie.split(';').forEach(function (el) {\n    let [key, value] = el.split('=')\n    cookie[key.trim()] = value\n  })\n  return cookie[COOKIE_NAME]\n}\n\n/**\n * Set session id\n */\n\nexport function setSessionId() {\n  /**\n   * Try to keep same session id if session cookie exists, generate a new one otherwise.\n   *   - First request in a session will generate a new session id\n   *   - The next request will keep the same session id and extend the TTL for 30 more minutes\n   */\n  const sessionId = getSessionId() || uuidv4()\n  let cookieValue = `${COOKIE_NAME}=${sessionId}; Max-Age=1800; path=/; secure`\n\n  if (domain) {\n    cookieValue += `; domain=${domain}`\n  }\n\n  document.cookie = cookieValue\n}\n","import { globalAttributes } from './constants'\nimport { getDefaultPayload } from './defaultPayload'\nimport { maskSuspiciousAttributes } from './maskSuspiciousAttributes'\nimport { sendEvent } from './sendEvent'\n\nexport function trackEvent(eventName: string, eventPayload?: Record<string, any>) {\n  const defaultPayload = getDefaultPayload()\n  const sanitizedPayload = maskSuspiciousAttributes({\n    ...defaultPayload,\n    ...eventPayload\n  })\n  // we don't want to sanitized global payload\n  const payload = { ...sanitizedPayload, ...globalAttributes }\n\n  return sendEvent(eventName, payload)\n}\n","import { proxy, host, DATASOURCE, token } from './constants'\nimport { getSessionId, setSessionId } from './sessionId'\n\n/**\n * Use `trackEvent` for sending events with default payload.\n * Use this to send event to endpoint with any default payload\n *\n */\nexport async function sendEvent(name: string, payload: Record<string, any>) {\n  setSessionId()\n  let url: string\n\n  if (proxy) {\n    url = `${proxy}/api/tracking`\n  } else if (host) {\n    let sanitizedHost = removeTrailingSlash(host)\n    url = `${sanitizedHost}/v0/events?name=${DATASOURCE}&token=${token}`\n  } else {\n    throw new Error('Host not configured.')\n  }\n\n  const request = new XMLHttpRequest()\n  request.open('POST', url, true)\n  request.setRequestHeader('Content-Type', 'application/json')\n  request.send(\n    JSON.stringify({\n      timestamp: new Date().toISOString(),\n      action: name,\n      version: '1',\n      session_id: getSessionId(),\n      payload: JSON.stringify(payload)\n    })\n  )\n}\n\nfunction removeTrailingSlash(str: string) {\n  return str.replaceAll(/\\/+$/gm, '')\n}\n","/**\n * Generate uuid to identify the session. Random, not data-derived\n */\nexport function uuidv4() {\n  return (1e7 + -1e3 + -4e3 + -8e3 + -1e11)\n    .toString()\n    .replace(/[018]/g, c =>\n      (\n        parseInt(c) ^\n        (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (parseInt(c) / 4)))\n      ).toString(16)\n    )\n}\n","/**\n * Try to mask PII and potential sensible attributes\n *\n */\nexport const maskSuspiciousAttributes = (\n  payload: Record<string, any>\n): Record<string, any> => {\n  const attributesToMask = [\n    'username',\n    'user',\n    'user_id',\n    'userid',\n    'password',\n    'pass',\n    'pin',\n    'passcode',\n    'token',\n    'api_token',\n    'email',\n    'address',\n    'phone',\n    'sex',\n    'gender',\n    'order',\n    'order_id',\n    'orderid',\n    'payment',\n    'credit_card'\n  ]\n\n  // Deep copy\n  let _payload = JSON.stringify(payload)\n  attributesToMask.forEach(attr => {\n    _payload = _payload.replaceAll(\n      new RegExp(`(\"${attr}\"):(\".+?\"|\\\\d+)`, 'mgi'),\n      '$1:\"********\"'\n    )\n  })\n\n  return JSON.parse(_payload)\n}\n","import { timezones } from './timezones'\n\nexport function getDefaultPayload() {\n  const qs = new URLSearchParams(window.location.search)\n  const utmContent = qs.get('utm_content')\n  const utmSource = qs.get('utm_source')\n  const utmMedium = qs.get('utm_medium')\n  const utmTerm = qs.get('utm_term')\n  const utmCampaign = qs.get('utm_campaign')\n  const referrer = document.referrer\n  const pathname = window.location.pathname\n  const href = window.location.href\n  const userAgent = window.navigator.userAgent\n  let locale = ''\n  let country = ''\n\n  try {\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone\n    country = timezones[timezone]\n    locale =\n      navigator.languages && navigator.languages.length\n        ? navigator.languages[0]\n        : // @ts-ignore\n          navigator.userLanguage ||\n          navigator.language ||\n          // @ts-ignore\n          navigator.browserLanguage ||\n          'en'\n  } catch (error) {\n    // ignore error\n  }\n\n  return {\n    ...(referrer && { referrer }),\n    ...(pathname && { pathname }),\n    ...(href && { href }),\n    ...(userAgent && { userAgent }),\n    ...(locale && { locale }),\n    ...(country && { country }),\n    ...(utmContent && { utmContent }),\n    ...(utmSource && { utmSource }),\n    ...(utmMedium && { utmMedium }),\n    ...(utmTerm && { utmTerm }),\n    ...(utmCampaign && { utmCampaign })\n  }\n}\n","import { trackEvent } from './trackEvent'\n\n/**\n * Track page hit\n */\nexport function trackPageHit() {\n  // If local development environment\n  // if (/^localhost$|^127(\\.[0-9]+){0,2}\\.[0-9]+$|^\\[::1?\\]$/.test(location.hostname) || location.protocol === 'file:') return;\n  // If test environment\n  // @ts-ignore\n  if (window.__nightmare || window.navigator.webdriver || window.Cypress) return\n\n  // Wait a bit for SPA routers\n  setTimeout(() => {\n    trackEvent('page_hit')\n  }, 300)\n}\n","import { trackEvent } from './trackEvent'\nimport { trackPageHit } from './trackPageHit'\n\n// Client\n;(window as any).Macro = { trackEvent }\n\n// Event listener\nwindow.addEventListener('hashchange', trackPageHit)\nconst his = window.history\n\nif (his.pushState) {\n  const originalPushState = his['pushState']\n  his.pushState = function () {\n    originalPushState.apply(this, arguments)\n    trackPageHit()\n  }\n  window.addEventListener('popstate', trackPageHit)\n}\n\nlet lastPage\nfunction handleVisibilityChange() {\n  if (!lastPage && document.visibilityState === 'visible') {\n    trackPageHit()\n  }\n}\n\nif ((document as any).visibilityState === 'prerender') {\n  document.addEventListener('visibilitychange', handleVisibilityChange)\n} else {\n  trackPageHit()\n}\n"],"names":["proxy","token","host","domain","DATASOURCE","globalAttributes","document","currentScript","getAttribute","attr","Array","from","attributes","name","startsWith","slice","value","timezones","getSessionId","cookie","split","forEach","el","key","trim","trackEvent","eventName","eventPayload","payload","url","cookieValue","toString","replace","c","parseInt","crypto","getRandomValues","Uint8Array","setSessionId","Error","replaceAll","request","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","timestamp","Date","toISOString","action","version","session_id","sendEvent","_payload","RegExp","parse","maskSuspiciousAttributes","qs","URLSearchParams","window","location","search","utmContent","get","utmSource","utmMedium","utmTerm","utmCampaign","referrer","pathname","href","userAgent","navigator","locale","country","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","languages","length","userLanguage","language","browserLanguage","error","getDefaultPayload","trackPageHit","__nightmare","webdriver","Cypress","setTimeout","Macro","addEventListener","his","history","pushState","originalPushState","apply","this","arguments","visibilityState"],"mappings":"gBAIWA,EAAeC,EAAeC,EAAcC,EAH5CC,EAAa,mBACbC,EAAmB,GAI9B,GAAIC,SAASC,cAAe,CAC1BL,EAAOI,SAASC,cAAcC,aAAa,aAC3CR,EAAQM,SAASC,cAAcC,aAAa,cAC5CP,EAAQK,SAASC,cAAcC,aAAa,cAC5CL,EAASG,SAASC,cAAcC,aAAa,eAC7CJ,EAAaE,SAASC,cAAcC,aAAa,oBAAsBJ,EAEvE,IAAK,MAAMK,KAAQC,MAAMC,KAAKL,SAASC,cAAcK,YAC/CH,EAAKI,KAAKC,WAAW,SACvBT,EAAiBI,EAAKI,KAAKE,MAAM,IAAMN,EAAKO,aCfrCC,EAAY,CACvB,eAAgB,KAChB,oBAAqB,KACrB,gBAAiB,KACjB,iBAAkB,KAClB,oBAAqB,KACrB,iBAAkB,KAClB,iBAAkB,KAClB,gBAAiB,KACjB,gBAAiB,KACjB,gBAAiB,KACjB,eAAgB,KAChB,kBAAmB,KACnB,oBAAqB,KACrB,eAAgB,KAChB,iBAAkB,KAClB,oBAAqB,KACrB,oBAAqB,KACrB,kBAAmB,KACnB,iBAAkB,KAClB,kBAAmB,KACnB,4BAA6B,KAC7B,oBAAqB,KACrB,kBAAmB,KACnB,mBAAoB,KACpB,6BAA8B,KAC9B,eAAgB,KAChB,gBAAiB,KACjB,4BAA6B,KAC7B,gBAAiB,KACjB,iBAAkB,KAClB,oBAAqB,KACrB,iBAAkB,KAClB,kBAAmB,KACnB,cAAe,KACf,eAAgB,KAChB,kBAAmB,KACnB,cAAe,KACf,8BAA+B,KAC/B,oBAAqB,KACrB,eAAgB,KAChB,qBAAsB,KACtB,oBAAqB,KACrB,kBAAmB,KACnB,wBAAyB,KACzB,oBAAqB,KACrB,qBAAsB,KACtB,eAAgB,KAChB,oBAAqB,KACrB,eAAgB,KAChB,qBAAsB,KACtB,mBAAoB,KACpB,oBAAqB,KACrB,4BAA6B,KAC7B,qBAAsB,KACtB,mBAAoB,KACpB,eAAgB,KAChB,kBAAmB,KACnB,oBAAqB,KACrB,qBAAsB,KACtB,eAAgB,KAChB,kBAAmB,KACnB,kBAAmB,KACnB,mBAAoB,KACpB,gBAAiB,KACjB,6BAA8B,KAC9B,eAAgB,KAChB,wBAAyB,KACzB,eAAgB,KAChB,aAAc,KACd,cAAe,KACf,gBAAiB,KACjB,sBAAuB,KACvB,6BAA8B,KAC9B,YAAa,KACb,aAAc,KACd,mBAAoB,KACpB,uBAAwB,KACxB,iBAAkB,KAClB,mBAAoB,KACpB,gBAAiB,KACjB,cAAe,KACf,kBAAmB,KACnB,gBAAiB,KACjB,qBAAsB,KACtB,aAAc,KACd,iBAAkB,KAClB,oBAAqB,KACrB,iBAAkB,KAClB,mBAAoB,KACpB,gBAAiB,KACjB,kBAAmB,KACnB,aAAc,KACd,oBAAqB,KACrB,oBAAqB,KACrB,gBAAiB,KACjB,mBAAoB,KACpB,iBAAkB,KAClB,eAAgB,KAChB,sBAAuB,KACvB,kBAAmB,KACnB,kBAAmB,KACnB,mBAAoB,KACpB,oBAAqB,KACrB,uBAAwB,KACxB,oBAAqB,KACrB,kBAAmB,KACnB,kBAAmB,KACnB,YAAa,KACb,iBAAkB,KAClB,gBAAiB,KACjB,iBAAkB,KAClB,kBAAmB,KACnB,mBAAoB,KACpB,mBAAoB,KACpB,eAAgB,KAChB,cAAe,KACf,iBAAkB,KAClB,gBAAiB,KACjB,mBAAoB,KACpB,mBAAoB,KACpB,iBAAkB,KAClB,uBAAwB,KACxB,gBAAiB,KACjB,gBAAiB,KACjB,kBAAmB,KACnB,kBAAmB,KACnB,gBAAiB,KACjB,mBAAoB,KACpB,gBAAiB,KACjB,cAAe,KACf,kBAAmB,KACnB,sBAAuB,KACvB,kBAAmB,KACnB,iBAAkB,KAClB,iBAAkB,KAClB,iBAAkB,KAClB,mBAAoB,KACpB,gBAAiB,KACjB,mBAAoB,KACpB,cAAe,KACf,gBAAiB,KACjB,mBAAoB,KACpB,sBAAuB,KACvB,iBAAkB,KAClB,mBAAoB,KACpB,sBAAuB,KACvB,gBAAiB,KACjB,iBAAkB,KAClB,gBAAiB,KACjB,YAAa,KACb,mBAAoB,KACpB,kBAAmB,KACnB,mBAAoB,KACpB,iCAAkC,KAClC,kBAAmB,KACnB,0BAA2B,KAC3B,gBAAiB,KACjB,iBAAkB,KAClB,iBAAkB,KAClB,iBAAkB,KAClB,qBAAsB,KACtB,gBAAiB,KACjB,sBAAuB,KACvB,4BAA6B,KAC7B,kBAAmB,KACnB,kBAAmB,KACnB,uBAAwB,KACxB,uBAAwB,KACxB,mBAAoB,KACpB,oBAAqB,KACrB,iBAAkB,KAClB,kBAAmB,KACnB,kBAAmB,KACnB,qBAAsB,KACtB,iBAAkB,KAClB,qBAAsB,KACtB,kBAAmB,KACnB,cAAe,KACf,6BAA8B,KAC9B,aAAc,KACd,aAAc,KACd,iBAAkB,KAClB,iBAAkB,KAClB,gBAAiB,KACjB,cAAe,KACf,YAAa,KACb,cAAe,KACf,mBAAoB,KACpB,qBAAsB,KACtB,iBAAkB,KAClB,eAAgB,KAChB,YAAa,KACb,oBAAqB,KACrB,sBAAuB,KACvB,gBAAiB,KACjB,8BAA+B,KAC/B,iBAAkB,KAClB,gBAAiB,KACjB,oBAAqB,KACrB,kBAAmB,KACnB,iCAAkC,KAClC,uBAAwB,KACxB,gBAAiB,KACjB,kBAAmB,KACnB,mBAAoB,KACpB,8BAA+B,KAC/B,iBAAkB,KAClB,sBAAuB,KACvB,iBAAkB,KAClB,kBAAmB,KACnB,iBAAkB,KAClB,eAAgB,KAChB,iBAAkB,KAClB,gBAAiB,KACjB,eAAgB,KAChB,oBAAqB,KACrB,wBAAyB,KACzB,uBAAwB,KACxB,gBAAiB,KACjB,iBAAkB,KAClB,eAAgB,KAChB,0BAA2B,KAC3B,0BAA2B,KAC3B,sBAAuB,KACvB,eAAgB,KAChB,oBAAqB,KACrB,mBAAoB,KACpB,gBAAiB,KACjB,kBAAmB,KACnB,kBAAmB,KACnB,qBAAsB,KACtB,4BAA6B,KAC7B,iBAAkB,KAClB,mBAAoB,KACpB,sBAAuB,KACvB,uBAAwB,KACxB,iBAAkB,KAClB,mBAAoB,KACpB,eAAgB,KAChB,sBAAuB,KACvB,eAAgB,KAChB,gBAAiB,KACjB,eAAgB,KAChB,eAAgB,KAChB,qBAAsB,KACtB,gBAAiB,KACjB,qBAAsB,KACtB,yBAA0B,KAC1B,gBAAiB,KACjB,eAAgB,KAChB,mBAAoB,KACpB,qBAAsB,KACtB,eAAgB,KAChB,gBAAiB,KACjB,kBAAmB,KACnB,aAAc,KACd,kBAAmB,KACnB,mBAAoB,KACpB,iBAAkB,KAClB,uBAAwB,KACxB,cAAe,KACf,cAAe,KACf,gBAAiB,KACjB,eAAgB,KAChB,mBAAoB,KACpB,oBAAqB,KACrB,oBAAqB,KACrB,4BAA6B,KAC7B,kBAAmB,KACnB,cAAe,KACf,sBAAuB,KACvB,kBAAmB,KACnB,kBAAmB,KACnB,mBAAoB,KACpB,oBAAqB,KACrB,iBAAkB,KAClB,kBAAmB,KACnB,gBAAiB,KACjB,iBAAkB,KAClB,mBAAoB,KACpB,iBAAkB,KAClB,gBAAiB,KACjB,mBAAoB,KACpB,mBAAoB,KACpB,kBAAmB,KACnB,sBAAuB,KACvB,oBAAqB,KACrB,eAAgB,KAChB,YAAa,KACb,wBAAyB,KACzB,mBAAoB,KACpB,kBAAmB,KACnB,mBAAoB,KACpB,iBAAkB,KAClB,mBAAoB,KACpB,mBAAoB,KACpB,kBAAmB,KACnB,mBAAoB,KACpB,mBAAoB,KACpB,iBAAkB,KAClB,qBAAsB,KACtB,oBAAqB,KACrB,gBAAiB,KACjB,cAAe,KACf,kBAAmB,KACnB,kBAAmB,KACnB,qBAAsB,KACtB,oBAAqB,KACrB,gBAAiB,KACjB,4BAA6B,KAC7B,iBAAkB,KAClB,gBAAiB,KACjB,mBAAoB,KACpB,eAAgB,KAChB,sBAAuB,KACvB,8BAA+B,KAC/B,8BAA+B,KAC/B,oBAAqB,KACrB,gBAAiB,KACjB,wBAAyB,KACzB,yBAA0B,KAC1B,mBAAoB,KACpB,oBAAqB,KACrB,aAAc,KACd,sBAAuB,KACvB,gBAAiB,KACjB,cAAe,KACf,qBAAsB,KACtB,qBAAsB,KACtB,kBAAmB,KACnB,+BAAgC,KAChC,qBAAsB,KACtB,mBAAoB,KACpB,oBAAqB,KACrB,eAAgB,KAChB,gBAAiB,KACjB,kBAAmB,KACnB,kBAAmB,KACnB,eAAgB,KAChB,iBAAkB,KAClB,gBAAiB,KACjB,qBAAsB,KACtB,gBAAiB,KACjB,iBAAkB,KAClB,mBAAoB,KACpB,cAAe,KACf,kBAAmB,KACnB,sBAAuB,KACvB,eAAgB,KAChB,sBAAuB,KACvB,eAAgB,KAChB,kBAAmB,KACnB,wBAAyB,KACzB,wBAAyB,KACzB,mBAAoB,KACpB,mBAAoB,KACpB,sBAAuB,KACvB,eAAgB,KAChB,mBAAoB,KACpB,eAAgB,KAChB,mBAAoB,KACpB,oBAAqB,KACrB,iCAAkC,KAClC,aAAc,KACd,iBAAkB,KAClB,qBAAsB,KACtB,qBAAsB,KACtB,uBAAwB,KACxB,iBAAkB,KAClB,cAAe,KACf,iBAAkB,KAClB,qBAAsB,KACtB,iBAAkB,KAClB,kBAAmB,KACnB,eAAgB,KAChB,iBAAkB,KAClB,kBAAmB,KACnB,mBAAoB,KACpB,kBAAmB,KACnB,cAAe,KACf,qBAAsB,KACtB,iBAAkB,KAClB,qBAAsB,KACtB,eAAgB,KAChB,mBAAoB,KACpB,gBAAiB,KACjB,eAAgB,KAChB,aAAc,KACd,iBAAkB,KAClB,gBAAiB,KACjB,qBAAsB,KACtB,qBAAsB,KACtB,cAAe,KACf,eAAgB,KAChB,iBAAkB,KAClB,mBAAoB,KACpB,iBAAkB,KAClB,oBAAqB,KACrB,gBAAiB,KACjB,YAAa,KACb,oBAAqB,KACrB,gBAAiB,KACjB,yBAA0B,KAC1B,uBAAwB,KACxB,iBAAkB,KAClB,0BAA2B,KAC3B,gBAAiB,KACjB,gBAAiB,KACjB,mBAAoB,KACpB,cAAe,KACf,kBAAmB,KACnB,oBAAqB,KACrB,uBAAwB,KACxB,gBAAiB,KACjB,cAAe,KACf,oBAAqB,KACrB,gBAAiB,KACjB,eAAgB,KAChB,qBAAsB,KACtB,kBAAmB,KACnB,kBAAmB,KACnB,wBAAyB,KACzB,aAAc,KACd,cAAe,eCraDC,IACd,IAAIC,EAAS,GAKb,OAJAb,SAASa,OAAOC,MAAM,KAAKC,QAAQ,SAAUC,GAC3C,IAAKC,EAAKP,GAASM,EAAGF,MAAM,KAC5BD,EAAOI,EAAIC,QAAUR,IAEhBG,EFTkB,uBGKXM,EAAWC,EAAmBC,GAS5C,gBCN8Bd,EAAce,OAE5C,IAAIC,EAEJ,cFWA,IAAIC,gBADcZ,OGlBX,YACJa,WACAC,QAAQ,SAAUC,IAEfC,SAASD,GACRE,OAAOC,gBAAgB,IAAIC,WAAW,IAAI,GAAM,IAAOH,SAASD,GAAK,GACtEF,SAAS,qCHeX5B,IACF2B,eAA2B3B,KAG7BG,SAASa,OAASW,EEpBlBQ,GAGItC,EACF6B,KAAS7B,0BACAE,EAIT,UAAUqC,MAAM,wBAFhBV,KADwC3B,EAqB/BsC,WAAW,SAAU,sBApBWpC,WAAoBH,IAK/D,MAAMwC,EAAU,IAAIC,sBACpBD,EAAQE,KAAK,OAAQd,GAAK,GAC1BY,EAAQG,iBAAiB,eAAgB,oBACzCH,EAAQI,KACNC,KAAKC,UAAU,CACbC,WAAW,IAAIC,MAAOC,cACtBC,OAAQtC,EACRuC,QAAS,IACTC,WAAYnC,IACZU,QAASkB,KAAKC,UAAUnB,wBAtB9B,mCDMS0B,CAAU5B,EAFD,IGPhBE,CAAAA,IA0BA,IAAI2B,EAAWT,KAAKC,UAAUnB,GAQ9B,MAhCyB,CACvB,WACA,OACA,UACA,SACA,WACA,OACA,MACA,WACA,QACA,YACA,QACA,UACA,QACA,MACA,SACA,QACA,WACA,UACA,UACA,eAKeP,QAAQZ,IACvB8C,EAAWA,EAASf,WAClB,IAAIgB,YAAY/C,mBAAuB,OACvC,mBAIGqC,KAAKW,MAAMF,IHhCOG,CAAyB,eIJlD,MAAMC,EAAK,IAAIC,gBAAgBC,OAAOC,SAASC,QACzCC,EAAaL,EAAGM,IAAI,eACpBC,EAAYP,EAAGM,IAAI,cACnBE,EAAYR,EAAGM,IAAI,cACnBG,EAAUT,EAAGM,IAAI,YACjBI,EAAcV,EAAGM,IAAI,gBACrBK,EAAWhE,SAASgE,SACpBC,EAAWV,OAAOC,SAASS,SAC3BC,EAAOX,OAAOC,SAASU,KACvBC,EAAYZ,OAAOa,UAAUD,UACnC,IAAIE,EAAS,GACTC,EAAU,GAEd,IACE,MAAMC,EAAWC,KAAKC,iBAAiBC,kBAAkBC,SACzDL,EAAU3D,EAAU4D,GACpBF,EACED,UAAUQ,WAAaR,UAAUQ,UAAUC,OACvCT,UAAUQ,UAAU,GAEpBR,UAAUU,cACVV,UAAUW,UAEVX,UAAUY,iBACV,KACN,MAAOC,IAIT,MAAO,IACDjB,GAAY,CAAEA,SAAAA,MACdC,GAAY,CAAEA,SAAAA,MACdC,GAAQ,CAAEA,KAAAA,MACVC,GAAa,CAAEA,UAAAA,MACfE,GAAU,CAAEA,OAAAA,MACZC,GAAW,CAAEA,QAAAA,MACbZ,GAAc,CAAEA,WAAAA,MAChBE,GAAa,CAAEA,UAAAA,MACfC,GAAa,CAAEA,UAAAA,MACfC,GAAW,CAAEA,QAAAA,MACbC,GAAe,CAAEA,YAAAA,IJrCAmB,MAGlB7D,OAGqCtB,aKP5BoF,IAKV5B,OAAO6B,aAAe7B,OAAOa,UAAUiB,WAAa9B,OAAO+B,SAG/DC,WAAW,KACTpE,EAAW,aACV,KCXHoC,OAAeiC,MAAQ,CAAErE,WAAAA,GAG3BoC,OAAOkC,iBAAiB,aAAcN,GACtC,MAAMO,EAAMnC,OAAOoC,QAEnB,GAAID,EAAIE,UAAW,CACjB,MAAMC,EAAoBH,EAAG,UAC7BA,EAAIE,UAAY,WACdC,EAAkBC,MAAMC,KAAMC,WAC9Bb,KAEF5B,OAAOkC,iBAAiB,WAAYN,GAUI,cAArCnF,SAAiBiG,gBACpBjG,SAASyF,iBAAiB,mBAP5B,WACgD,YAA7BzF,SAASiG,iBACxBd,MAOFA"}